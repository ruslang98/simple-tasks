# 1.Пользователь вводит число, если оно четное - выбрасываем исключение ValueError,
# если оно меньше 0 - TypeError, если оно больше 10 - IndexError.
# Обрабатываем ошибку, говорим пользователю, в чем его ошибка
#
# 2. Создайте список произвольной длины. Пользователь должен ввести индекс объекта, который хочет посмотреть.
# Если все хорошо - пишите объект в консоль. Если нет - обработайте возмозможные ошибки и скажите ему, что не так
#
# **Задачи на закрепление функций:
# 1.Написать функцию, которая принимает на вход два аргумента. Если аргументы больше нуля, возвращаем их сумму.
# Если оба меньше - разность. Если знаки разные - возвращаем 0
def sum_def(num1, num2):
    if num1 > 0 and num2 > 0:
        return num1 + num2
    elif num1 < 0 and num2 < 0:
        return
# 2.Написать функцию, которая принимает 3 аргумента - числа, найти среди них два максимальных, вывести в консоль
#
# 3.Написать функцию, которая принимает два аргумента. Первый - список чисел, второй - булевый флаг.
# Если флаг действителен - возвращаем новый список с нечетными числами из входного списка, если флаг отрицателен - возвращаем новый список с четными числами из входного списка
#
# **Задачи на закрепление типов аргументов:
# 1.Написать функцию, которая принимает любое количество аргументов чисел. Среди них она находит
# максимальное и минимальное. И возвращает оба
#
# 2.Написать функцию, которая принимает два аргумента: строка и булевый флаг case по-умолчанию равный True. Если флаг
# действителен: возвращаем новую строку, где каждый символ входной приведен к верхнему регистру, иначе - к нижнему
#
# 3.Написать функцию, которая принимает любое количество позиционных
# аргументов - строк и один парматер по-умолчанию glue,
# который равен ':'. Соединить все строки таким образом,
# чтобы в результат попали все строки, длинее 3 символов. Для соединения между любых двух строк вставлять glue